"use strict";(self.webpackChunkdistributed_systems=self.webpackChunkdistributed_systems||[]).push([[20],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),m=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),k=m(r),u=n,b=k["".concat(l,".").concat(u)]||k[u]||c[u]||o;return r?a.createElement(b,i(i({ref:t},p),{},{components:r})):a.createElement(b,i({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var m=2;m<o;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},3975:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var a=r(7462),n=(r(7294),r(3905));const o={},i="Homework",s={unversionedId:"labs/Lab 1 - Git Basics/Homework",id:"labs/Lab 1 - Git Basics/Homework",title:"Homework",description:"Table of Contents",source:"@site/docs/labs/01.Lab 1 - Git Basics/Homework.md",sourceDirName:"labs/01.Lab 1 - Git Basics",slug:"/labs/Lab 1 - Git Basics/Homework",permalink:"/docs/labs/Lab 1 - Git Basics/Homework",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cheatsheet",permalink:"/docs/labs/Lab 1 - Git Basics/Cheatsheet"},next:{title:"Lesson",permalink:"/docs/labs/Lab 1 - Git Basics/Lesson"}},l={},m=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<strong>Homework Task 1: Initial Repository</strong>",id:"homework-task-1-initial-repository",level:2}],p={toc:m};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"homework"},"Homework"),(0,n.kt)("h1",{id:"homework-1-git-basics"},"Homework 1: Git Basics"),(0,n.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#homework"},"Homework")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#homework-1-git-basics"},"Homework 1: Git Basics"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#homework-task-1-initial-repository"},(0,n.kt)("strong",{parentName:"a"},"Homework Task 1: Initial Repository")))))),(0,n.kt)("h2",{id:"homework-task-1-initial-repository"},(0,n.kt)("strong",{parentName:"h2"},"Homework Task 1: Initial Repository")),(0,n.kt)("p",null,"For homework:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Create a ",(0,n.kt)("em",{parentName:"li"},"GitHub")," repository named ",(0,n.kt)("inlineCode",{parentName:"li"},"{your-username}-hw-01"),(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"IMPORTANT: The repository must be created in the ",(0,n.kt)("a",{parentName:"strong",href:"https://github.com/fesb-distributed-systems-2024"},"\nFESB Distributed Systems 2024/25 Organisation"))))),(0,n.kt)("li",{parentName:"ol"},"Clone the repository as shown in the ",(0,n.kt)("a",{parentName:"li",href:"./Lesson"},"Lesson")),(0,n.kt)("li",{parentName:"ol"},"Create a ",(0,n.kt)("inlineCode",{parentName:"li"},"development")," branch"),(0,n.kt)("li",{parentName:"ol"},"Create a ",(0,n.kt)("em",{parentName:"li"},"readme file")," called ",(0,n.kt)("em",{parentName:"li"},"README.md"),(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"NOTE:")," The ",(0,n.kt)("em",{parentName:"p"},"readme file")," is just a text file which uses ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax"},"GitHub Markdown")))),(0,n.kt)("li",{parentName:"ol"},"In the ",(0,n.kt)("em",{parentName:"li"},"readme file")," write:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-md"},"# {your-username}'s First Repository\nHello, World!\n---\nAuthor: {your-username}\n")),(0,n.kt)("ol",{start:6},(0,n.kt)("li",{parentName:"ol"},"Stage, commit and push the changes to the remote repository.",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"IMPORTANT:")," All changes must be done on ",(0,n.kt)("inlineCode",{parentName:"p"},"development")," branch"))),(0,n.kt)("li",{parentName:"ol"},"Create a pull request (PR) to merge ",(0,n.kt)("inlineCode",{parentName:"li"},"development")," branch into ",(0,n.kt)("inlineCode",{parentName:"li"},"main")),(0,n.kt)("li",{parentName:"ol"},"After the PR is approved, merge it.",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"NOTE:")," If the PR is rejected, read the comments made by the assistant (",(0,n.kt)("inlineCode",{parentName:"p"},"pkaselj"),") and fix issues before ",(0,n.kt)("strong",{parentName:"p"},"submitting the PR again - do not merge if the PR is rejected"))))))}c.isMDXComponent=!0}}]);